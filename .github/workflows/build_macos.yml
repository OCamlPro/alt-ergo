name: Build MacOS

# This workflow try to build and test Alt-Ergo on a MacOS system
# If the build succed, an artifact with the alt-ergo binary is uploaded
# It only runs on `next` or `main` branch
on: [push,pull_request]

env:
  OCAML_DEFAULT_VERSION: 4.10.0
  # Add OPAMYES=true to the environment, this is usefill to replace `-y` option
  # in any opam call
  OPAMYES: true
  # Alt-Ergo depext crahs with with-test flag to true
  # env:
  #   # The with-test flag is set to true to force installation of deps and
  #   # depext needed to run the alt-ergo tests
  #   OPAMWITHTEST: true

jobs:
  install_macos:
    # Install all packages and runs tests on MacOS with opam
    name: Install MacOS

    runs-on: macos-latest

    steps:
      # Checkout the code of the current branch
      - name: Checkout code
        uses: actions/checkout@v3

      # Retrieve the opam cache with unique key
      # A new cache is created/used if the `.opam` files changes or
      # if we use another ocaml version
      # This action only retrieve de .opam/ directory
      - name: Retrieve opam cache
        uses: actions/cache@v2
        id: cache-opam
        with:
          path: ~/.opam
          key: v1-${{ runner.os }}-alt-ergo-${{ env.OCAML_DEFAULT_VERSION }}-${{ hashFiles('*.opam') }}

      # Get an OCaml environment with opam installed and the proper ocaml version
      # opam will used opam cache environment if retrieved
      - name: Use OCaml ${{ env.OCAML_DEFAULT_VERSION }}
        uses: avsm/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ env.OCAML_DEFAULT_VERSION }}

      # Pin the packages, this is needed for opam depext
      # remove this step when opam 2.1 will be used
      - name: Pin no action
        run: opam pin add . --no-action

      # Install external dependencies
      # remove this step when opam 2.1 will be used
      #- name: opam install depext
      #  run: opam depext alt-ergo-lib alt-ergo-parsers alt-ergo altgr-ergo

      # Install dependencies
      - name: Install deps
        run: opam install  ./*.opam --deps-only --with-test


      # Build and install with opam
      - name: Install
        run: opam reinstall .

      # Run non regression tests
      - name: Run non regression tests
        run: opam exec -- rsc/extra/non_regression.sh

      # Get and Set version of the installed alt-ergo binary
      # Get and Set the path where alt-ergo binary is located
      - name: Get version and path as variable
        id: get_version_path
        run: |
          echo "::set-output name=version::$(opam exec -- alt-ergo --version)"
          echo "::set-output name=path::$(opam var bin)"

      # Upload Alt-Ergo binary as an artifact
      # the artifact name contains the alt-ergo version as well as the system
      # is builded on and the ocaml compiler version used
      - name: Upload Alt-Ergo binary
        uses: actions/upload-artifact@v2
        with:
          name: alt-ergo-${{ steps.get_version_path.outputs.version }}-${{ runner.os }}-${{ env.OCAML_DEFAULT_VERSION }}
          path: "${{ steps.get_version_path.outputs.path }}/alt-ergo"
